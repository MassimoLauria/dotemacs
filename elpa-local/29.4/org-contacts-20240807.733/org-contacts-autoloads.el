;;; org-contacts-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from org-contacts.el

(autoload 'org-contacts-files "org-contacts" "\
Return list of Org files to use for contact management.")
(autoload 'org-contacts-org-complete-function "org-contacts" "\
`completion-at-point' function to complete @name in `org-mode'.
Usage: (add-hook \\='completion-at-point-functions
                 #\\='org-contacts-org-complete-function nil \\='local)")
(autoload 'org-contacts-org-complete-setup "org-contacts" "\
Setup `completion-at-point-functions' with `org-contacts' in buffer local.")
(add-hook 'org-mode-hook #'org-contacts-org-complete-setup)
(autoload 'org-contacts-anniversaries "org-contacts" "\
Compute FIELD anniversary for each contact, returning FORMAT.
Default FIELD value is \"BIRTHDAY\".

Format is a string matching the following format specification:

  %h - Heading name
  %l - Link to the heading
  %y - Number of year
  %Y - Number of year (ordinal)

(fn &optional FIELD FORMAT)")
(autoload 'org-contacts "org-contacts" "\
Search `org-contacts' from FILES and jump to contact location.

(fn &optional FILES)" t)
(autoload 'org-contacts-agenda "org-contacts" "\
Create agenda view for contacts matching NAME.

(fn NAME)" t)
(autoload 'org-contacts-setup-completion-at-point "org-contacts" "\
Add `org-contacts-message-complete-function' to capf for completing contact at point.")
(if (fboundp 'org-link-set-parameters) (org-link-set-parameters "org-contact" :follow #'org-contacts-link-open :complete #'org-contacts-link-complete :store #'org-contacts-link-store :face 'org-contacts-link-face) (when (fboundp 'org-add-link-type) (org-add-link-type "org-contact" 'org-contacts-link-open)))
(autoload 'org-contacts-link-store "org-contacts" "\
Store the contact in `org-contacts-files' with a link.")
(autoload 'org-contacts-link-open "org-contacts" "\
Open org-contacts: link with jumping or searching QUERY.

(fn QUERY)")
(autoload 'org-contacts-link-complete "org-contacts" "\
Create a `org-contacts' link using completion.

(fn &optional ARG)")
(register-definition-prefixes "org-contacts" '("org-contacts-"))

;;; End of scraped data

(provide 'org-contacts-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; org-contacts-autoloads.el ends here
