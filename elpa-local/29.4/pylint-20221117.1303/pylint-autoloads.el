;;; pylint-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from pylint.el

(autoload 'pylint-insert-ignore-comment "pylint" "\
Insert a comment like \"# pylint: disable=msg1,msg2,...\".

This command repeatedly uses `completing-read' to match known
messages, and ultimately inserts a comma-separated list of all
the selected messages.

With prefix argument, only insert a comma-separated list (for
appending to an existing list).

(fn &optional ARG)" t)
(autoload 'pylint "pylint" "\
Run PYLINT, and collect output in a buffer, much like `compile'.

While pylint runs asynchronously, you can use \\[next-error] (M-x next-error),
or \\<pylint-mode-map>\\[compile-goto-error] in the grep output buffer, to go to the lines where pylint found matches.

\\{pylint-mode-map}

(fn &optional ARG)" t)
(autoload 'pylint-add-key-bindings "pylint")
(autoload 'pylint-add-menu-items "pylint")
(register-definition-prefixes "pylint" '("pylint-"))


;;; Generated autoloads from pylint-flymake.el

(register-definition-prefixes "pylint-flymake" '("flymake-pylint-init"))

;;; End of scraped data

(provide 'pylint-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; pylint-autoloads.el ends here
