# -*- mode: snippet -*-
# name: Advent of Code template
# key: * nokey
# --
// Advent of Code `(format-time-string "%Y day %d" (current-time))`
//
// Massimo Lauria

package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"strings"
    "strconv"
)

var ToInt=strconv.Atoi

const exampleData = \`\`

func readInputFile(filename string) string {
	data, err := ioutil.ReadFile(filename)
	if err != nil {
		fmt.Fprintf(os.Stderr,"File %s not found\n", filename)
		os.Exit(1)
	}
	return string(data)
}

func processText(data string) int {
	lines := strings.Split(string(data),"\n")
	n := len(lines)
	if len(lines[n-1])==0 {
		lines = lines[:n-1]
        n--
	}
	return n
}


func main() {
	data := readInputFile("`(format-time-string "input%d.txt" (current-time))`")
	example := processText(exampleData)
	values  := processText(data)
	fmt.Println("Part1 - example  ", part1(example))
	fmt.Println("Part1 - solution ", part1(values))
	fmt.Println("Part2 - example"  , part2(example))
	fmt.Println("Part2 - solution ", part2(values))
}

func part1(value int) int {
	return value
}

func part2(value int ) int {
	return value
}
